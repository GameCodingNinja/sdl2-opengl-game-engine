
//
//  FILE NAME:  titlescreenstate.ang
//
//  DESC:       Title screen state
//

final class CTitleScreenState : iGameState
{
    iSprite @cube;
    dictionary m_gameStateDict;

    //
    //  Constructor
    //
    CTitleScreenState()
    {
        super( EGS_TITLE_SCREEN, EGS_GAME_LOAD );
        
        m_gameStateDict.set("title_screen_state", EGS_TITLE_SCREEN);
        m_gameStateDict.set("run_state", EGS_RUN);

        // Unblock the menu messaging and activate needed trees
        MenuMgr.allow();
        MenuMgr.activateTree( "title_screen_tree" );
    }

    //
    //  Init the state
    //
    void init() override
    {
        StrategyMgr.createSprite( "strategyFor2D", "(title_screen)", "background" );

        iStrategy @strategy = StrategyMgr.getStrategy( "strategyFor3D" );
        strategy.setCameraId( "camera3D" );

        CCamera @camera = CameraMgr.createPerspective("camera3D");
        camera.setPos( 0, 0, 20 );

        @cube = strategy.createSprite( "(cube)", "cube" );
        cube.setScale(3,3,3);

        Spawn("Screen_FadeIn");
    }
    
    //
    //  Handle events
    //
    void handleEvent() override
    {
        if( ActionMgr.wasEvent(EGE_MENU_GAME_STATE_CHANGE, ETC_BEGIN) )
            getStateMessage().setMsg( EGameState(m_gameStateDict[MenuMgr.getActiveMenu().getActiveControl().getExecutionAction()]), getState() );
    }

    //
    //  Update the state
    //
    void update() override
    {
        float rot = HighResTimer.getElapsedTime() * 0.04;
        cube.incRot( rot, rot, 0 );
    }
};


//
//  Functions for loading/unloading the assets for this state
//
namespace NTitleScreenState
{
    //
    //  Namespace function for loading the assets for this state
    //  NOTE: Only call when the class is not allocated
    //
    void ObjectDataLoad()
    {
        ObjectDataMgr.loadGroup2D( "(title_screen)" );
        ObjectDataMgr.loadGroup3D( "(cube)" );
    }
}